<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
         http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd"	
        default-lazy-init="true">
    <context:component-scan base-package="cn.etl"/>
    <bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:etl.properties</value>
		</property>
	</bean>
    <bean name="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan" value="cn.etl.entity"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.autocommit">true </prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- ehCache缓存配置 -->
				<!-- <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> -->
			</props>
		</property>
	</bean>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="${jdbc.driverClassName}"/>
    <property name="jdbcUrl" value="${jdbc.url}"/>
    <property name="user" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
	</bean>
	 <!-- 配置 Spring 的声明式事务 -->
    <!-- 1.配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
   <!--  2.配置事务属性 , 需要事务管理器 -->
<!--   <tx:advice id="txAdvice" transaction-manager="transactionManager"> -->
<!--         <tx:attributes> -->
<!--             <tx:method name="get*" read-only="true"/> -->
<!--             添加下面此行后改变了 事务的隔离级别 -->
<!--             <tx:method name="purchase" propagation="REQUIRES_NEW"/> -->
<!--             <tx:method name="*" read-only="false"/> -->
<!--         </tx:attributes> -->
<!--     </tx:advice> -->
<!--     3.配置事务切点, 并把切点和事务属性联系起来 -->
<!--     <aop:config> -->
<!--         <aop:pointcut expression="execution(* org.expc.daoimpl.*.*(..))"  -->
<!--             id="txPointcut"/> -->
<!--         <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/> -->
<!--     </aop:config>  -->
	<mvc:annotation-driven>
		<mvc:message-converters>  
   <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
       <property name="supportedMediaTypes">  
           <list>  
               <value>text/plain;charset=UTF-8</value>  
               <value>text/html;charset=UTF-8</value>  
           </list>  
       </property>  
   </bean>  
   <bean  
       class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
       <property name="supportedMediaTypes">  
           <list>  
               <value>application/json; charset=UTF-8</value>  
               <value>application/x-www-form-urlencoded; charset=UTF-8</value>  
           </list>  
       </property>  
   </bean>  
</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 配置文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- <property name="maxUploadSize" value="20000"></property> -->
	</bean>
    <!-- ... -->
	
</beans>